train:
  - 'C:\Users\demir\OneDrive\Belgeler\CS CLUB\patchwork\patchwork_yolo\images\train'
  - 'C:\Users\demir\OneDrive\Belgeler\CS CLUB\pathcwork2.0\images\train'

val:
  - 'C:\Users\demir\OneDrive\Belgeler\CS CLUB\patchwork\patchwork_yolo\images\val'
  - 'C:\Users\demir\OneDrive\Belgeler\CS CLUB\pathcwork2.0\images\val'

nc: 2
names: [damaged, undamaged]

# (optional) class‑balancing weights can be added here if needed

# (optional) class‑balancing weights
# weights: [2.0, 1.0]   # give “damaged” extra weight if it is rarer

# python train.py --img 640 --batch 16 --epochs 50 --data "C:\Users\demir\OneDrive\Belgeler\GitHub\Earthquake_AI\damage_dataset.yaml" --weights yolov5s.pt --name damage_experiment

# NEW TRAIN GPU
# python train.py `
#   --img 640 `
#   --batch 16 `
#   --epochs 120 `
#   --data "C:\Users\demir\OneDrive\Belgeler\GitHub\Earthquake_AI\damage_dataset.yaml" `
#   --weights "C:\Users\demir\OneDrive\Belgeler\GitHub\Earthquake_AI\yolov5\runs\train\damage_experiment2\weights\best.pt" `
#   --multi-scale `
#   --hyp data\hyps\hyp.scratch-low.yaml `
#   --name damage_synth `
#   --device 0

# TEST
# python detect.py --weights runs/train/damage_synth2/weights/best.pt --source testimg.png --img 640 --conf 0.05 --iou 0.45 --save-txt --save-conf


# FINETUNE
# python train.py `
#   --img 640 `
#   --batch 16 `
#   --epochs 120 `
#   --data "C:\Users\demir\OneDrive\Belgeler\GitHub\Earthquake_AI\damage_dataset.yaml" `
#   --weights "C:\Users\demir\OneDrive\Belgeler\GitHub\Earthquake_AI\yolov5\runs\train\damage_experiment2\weights\best.pt" `
#   --multi-scale `
#   --hyp data\hyps\hyp.scratch-low.yaml `
#   --name damage_synth_finetune `
#   --device 0
